version: "3.3"
services:
  traefik:
    image: traefik:v2.0.2
    command: 
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--providers.docker.network=traefik-net"
    networks:
      - traefik-net
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.my-container.rule=Host(`domain.com`)"
        - "traefik.http.routers.my-container.entrypoints=traefik"
        - "traefik.http.services.my-container-service.loadbalancer.server.port=8080"
 
  portainer:
    image: portainer/portainer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainerdata:/data"
    networks:
      - traefik-net
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer-1.com`)"
        - "traefik.http.routers.portainer.entrypoints=web"
        - "traefik.http.routers.portainer.service=portainer-server"
        - "traefik.http.services.portainer-server.loadbalancer.server.port=9000"
  
  nginx-server:
    image: nginx:latest
    networks:
      - traefik-net
    deploy:
      replicas: 3
      placement:
        constraints: [ node.role == worker ]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nginx.rule=Host(`nginx-1.com`)"
        - "traefik.http.routers.nginx.entrypoints=web"
        - "traefik.http.routers.nginx.service=nginx-server"
        - "traefik.http.services.nginx-server.loadbalancer.server.port=80"
 
networks:
  traefik-net:
    driver: overlay
 
volumes:
   portainerdata:
   mongodata: